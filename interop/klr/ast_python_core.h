/*
Copyright (c) 2025 Amazon.com, Inc. or its affiliates. All Rights Reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Paul Govereau, Sean McLaughlin
*/
#pragma once

// This file is automatically generated from KLR.
// Manual edits to this file will be overwritten.

#include "stdc.h"
#include "region.h"
#include "ast_common.h"

// KLR.Python Abstract Syntax

enum Python_Const_Tag {
  Python_Const_none = 1,
  Python_Const_bool,
  Python_Const_int,
  Python_Const_float,
  Python_Const_string,
  Python_Const_ellipsis,
  Python_Const_tensor,
};
struct Python_Const_bool {
  bool value;
};
struct Python_Const_int {
  i32 value;
};
struct Python_Const_float {
  f32 value;
};
struct Python_Const_string {
  char *value;
};
struct Python_Const_tensor {
  struct Nat_List *shape;
  char *dtype;
};
struct Python_Const {
  enum Python_Const_Tag tag;
  union {
    struct Python_Const_bool b;
    struct Python_Const_int i;
    struct Python_Const_float f;
    struct Python_Const_string s;
    struct Python_Const_tensor tensor;
  };
};

enum Python_Ctx {
  Python_Ctx_load = 1,
  Python_Ctx_store,
  Python_Ctx_del,
};

enum Python_BoolOp {
  Python_BoolOp_land = 1,
  Python_BoolOp_lor,
};

enum Python_CmpOp {
  Python_CmpOp_eq = 1,
  Python_CmpOp_ne,
  Python_CmpOp_lt,
  Python_CmpOp_le,
  Python_CmpOp_gt,
  Python_CmpOp_ge,
  Python_CmpOp_is,
  Python_CmpOp_isNot,
  Python_CmpOp_isIn,
  Python_CmpOp_notIn,
};

enum Python_UnaryOp {
  Python_UnaryOp_invert = 1,
  Python_UnaryOp_not,
  Python_UnaryOp_uadd,
  Python_UnaryOp_usub,
};

enum Python_BinOp {
  Python_BinOp_add = 1,
  Python_BinOp_sub,
  Python_BinOp_mul,
  Python_BinOp_matmul,
  Python_BinOp_div,
  Python_BinOp_mod,
  Python_BinOp_pow,
  Python_BinOp_lshift,
  Python_BinOp_rshift,
  Python_BinOp_or,
  Python_BinOp_xor,
  Python_BinOp_and,
  Python_BinOp_floor,
};

enum Python_Expr_Tag {
  Python_Expr_const = 1,
  Python_Expr_name,
  Python_Expr_attr,
  Python_Expr_tuple,
  Python_Expr_list,
  Python_Expr_dict,
  Python_Expr_subscript,
  Python_Expr_slice,
  Python_Expr_boolOp,
  Python_Expr_binOp,
  Python_Expr_unaryOp,
  Python_Expr_compare,
  Python_Expr_ifExp,
  Python_Expr_call,
  Python_Expr_starred,
};
struct Python_Expr_const {
  struct Python_Const *value;
};
struct Python_Expr_name {
  char *id;
  enum Python_Ctx ctx;
};
struct Python_Expr_attr {
  struct Python_Expr *value;
  char *id;
  enum Python_Ctx ctx;
};
struct Python_Expr_tuple {
  struct Python_Expr_List *xs;
  enum Python_Ctx ctx;
};
struct Python_Expr_list {
  struct Python_Expr_List *xs;
  enum Python_Ctx ctx;
};
struct Python_Expr_dict {
  struct Python_Expr_List *keys;
  struct Python_Expr_List *values;
};
struct Python_Expr_subscript {
  struct Python_Expr *tensor;
  struct Python_Expr *index;
  enum Python_Ctx ctx;
};
struct Python_Expr_slice {
  struct Python_Expr *l;
  struct Python_Expr *u;
  struct Python_Expr *step;
};
struct Python_Expr_boolOp {
  enum Python_BoolOp op;
  struct Python_Expr_List *values;
};
struct Python_Expr_binOp {
  enum Python_BinOp op;
  struct Python_Expr *left;
  struct Python_Expr *right;
};
struct Python_Expr_unaryOp {
  enum Python_UnaryOp op;
  struct Python_Expr *operand;
};
struct Python_Expr_compare {
  struct Python_Expr *left;
  struct Python_CmpOp_List *ops;
  struct Python_Expr_List *comparators;
};
struct Python_Expr_ifExp {
  struct Python_Expr *test;
  struct Python_Expr *body;
  struct Python_Expr *orelse;
};
struct Python_Expr_call {
  struct Python_Expr *f;
  struct Python_Expr_List *args;
  struct Python_Keyword_List *keywords;
};
struct Python_Expr_starred {
  struct Python_Expr *e;
  enum Python_Ctx ctx;
};
struct Python_Expr_ {
  enum Python_Expr_Tag tag;
  union {
    struct Python_Expr_const c;
    struct Python_Expr_name name;
    struct Python_Expr_attr attr;
    struct Python_Expr_tuple tuple;
    struct Python_Expr_list list;
    struct Python_Expr_dict dict;
    struct Python_Expr_subscript subscript;
    struct Python_Expr_slice slice;
    struct Python_Expr_boolOp boolOp;
    struct Python_Expr_binOp binOp;
    struct Python_Expr_unaryOp unaryOp;
    struct Python_Expr_compare compare;
    struct Python_Expr_ifExp ifExp;
    struct Python_Expr_call call;
    struct Python_Expr_starred starred;
  };
};

struct Python_Expr {
  struct Python_Expr_ *expr;
  struct Core_Pos *pos;
};

struct Python_Keyword {
  char *id;
  struct Python_Expr *value;
  struct Core_Pos *pos;
};

enum Python_Stmt_Tag {
  Python_Stmt_pass = 1,
  Python_Stmt_expr,
  Python_Stmt_assert,
  Python_Stmt_ret,
  Python_Stmt_assign,
  Python_Stmt_augAssign,
  Python_Stmt_annAssign,
  Python_Stmt_ifStm,
  Python_Stmt_forLoop,
  Python_Stmt_breakLoop,
  Python_Stmt_continueLoop,
  Python_Stmt_whileLoop,
};
struct Python_Stmt_expr {
  struct Python_Expr *e;
};
struct Python_Stmt_assert {
  struct Python_Expr *e;
};
struct Python_Stmt_ret {
  struct Python_Expr *e;
};
struct Python_Stmt_assign {
  struct Python_Expr_List *xs;
  struct Python_Expr *e;
};
struct Python_Stmt_augAssign {
  struct Python_Expr *x;
  enum Python_BinOp op;
  struct Python_Expr *e;
};
struct Python_Stmt_annAssign {
  struct Python_Expr *x;
  struct Python_Expr *annotation;
  struct Python_Expr *value;
};
struct Python_Stmt_ifStm {
  struct Python_Expr *e;
  struct Python_Stmt_List *thn;
  struct Python_Stmt_List *els;
};
struct Python_Stmt_forLoop {
  struct Python_Expr *x;
  struct Python_Expr *iter;
  struct Python_Stmt_List *body;
  struct Python_Stmt_List *orelse;
};
struct Python_Stmt_whileLoop {
  struct Python_Expr *test;
  struct Python_Stmt_List *body;
  struct Python_Stmt_List *orelse;
};
struct Python_Stmt_ {
  enum Python_Stmt_Tag tag;
  union {
    struct Python_Stmt_expr expr;
    struct Python_Stmt_assert assert;
    struct Python_Stmt_ret ret;
    struct Python_Stmt_assign assign;
    struct Python_Stmt_augAssign augAssign;
    struct Python_Stmt_annAssign annAssign;
    struct Python_Stmt_ifStm ifStm;
    struct Python_Stmt_forLoop forLoop;
    struct Python_Stmt_whileLoop whileLoop;
  };
};

struct Python_Stmt {
  struct Python_Stmt_ *stmt;
  struct Core_Pos *pos;
};

struct Python_Args {
  struct String_List *posonlyargs;
  struct String_List *args;
  struct Python_Expr_List *defaults;
  char *vararg;
  struct String_List *kwonlyargs;
  struct Python_Keyword_List *kw_defaults;
  char *kwarg;
};

struct Python_Fun {
  char *name;
  char *fileName;
  u32 line;
  char *source;
  struct Python_Args *args;
  struct Python_Stmt_List *body;
};

struct Python_Kernel {
  char *entry;
  struct Python_Fun_List *funcs;
  struct Python_Expr_List *args;
  struct Python_Keyword_List *kwargs;
  struct Python_Keyword_List *globals;
  u32 grid;
  struct Python_Expr_List *scheduleEdges;
};

struct Python_Expr_List {
  struct Python_Expr_List *next;
  struct Python_Expr *expr;
};

struct Python_CmpOp_List {
  struct Python_CmpOp_List *next;
  enum Python_CmpOp cmpop;
};

struct Python_Keyword_List {
  struct Python_Keyword_List *next;
  struct Python_Keyword *keyword;
};

struct Python_Stmt_List {
  struct Python_Stmt_List *next;
  struct Python_Stmt *stmt;
};

struct Python_Fun_List {
  struct Python_Fun_List *next;
  struct Python_Fun *fun;
};
